service:
  name: products-service
frameworkVersion: '2'

useDotenv: true

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: ${env:REGION}
  httpApi:
    cors: true
  environment:
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_DATABASE: ${env:PG_DATABASE}
    PG_USERNAME: ${env:PG_USERNAME}
    PG_PASSWORD: ${env:PG_PASSWORD}
    SNS_ARN:
      Ref: SNSTopic
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource:
        Ref: SNSTopic
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - !ImportValue SQSQueueArn
custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: src/**/*.test.js
  dotenv:
    required:
      file: true
functions:
  products:
    handler: products.handler
    events:
      - httpApi:
          method: get
          path: /products
  productById:
    handler: productById.handler
    events:
      - httpApi:
          method: get
          path: /products/{id}
  productCreate:
    handler: productCreate.handler
    events:
      - httpApi:
          method: post
          path: /products
  catalogBatchProcess:
    handler: catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 2
          arn:
            !ImportValue SQSQueueArn
resources:
  Resources:
    SNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        TopicName: "createProductTopic"
    SNSSubscriptionProductImportSuccess:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: "${env:SUCCESS_EMAIL}"
        Protocol: "email"
        TopicArn:
          Ref: "SNSTopic"
        FilterPolicy: {
            status: ["success"]
        }
    SNSSubscriptionProductImportFail:
      Type: "AWS::SNS::Subscription"
      Properties:
        Endpoint: "${env:FAIL_EMAIL}"
        Protocol: "email"
        TopicArn:
          Ref: "SNSTopic"
        FilterPolicy: {
          status: ["fail"]
        }